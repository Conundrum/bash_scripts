#!/bin/bash
# chkconfig: 345 96 20
# description: Control infamatica process
#
# File: /etc/init.d/informatica
# Purpose: Start and stop the Informatica server
# Author: bthompso (Conundrum)
# Date: 3/11/2014
#
# Absolutely no warranty, use at your own risk
# Please include this header in any copy or reuse of the script you make
#
# Version 0.01
#
# Usage:
#	1: Create file at /etc/init.d/informatica
#	2: chmod 750 /etc/init.d/informatica
#	3: chkconfig --add informatica
#
#------------------------------------
#
# The following values must be changed for your environment
#

# full path to the infaservice.sh file
INFOSERVICE=/APPS/Informatica/9.0.1/server/tomcat/bin
# log file path, change if you don't want logs to go to /var/log
LOG_PATH=/var/log


# the following variables should not need modification
SUBSYS=$(basename $0)
INFO_FINGERPRINT='pmrepagent'
INFO_START_TIMEOUT=300
INFO_STOP_TIMEOUT=300
LOCK_FILE='var/lock/subsys/'$SUBSYS
START_LOG=$LOG_PATH/$SUBSYS-start.log
STOP_LOG=$LOG_PATH/$SUBSYS-stop.log
# source the functions library
#-----------------------
if [ -f /etc/rc.d/init.d/functions ]; then
      . /etc/rc.d/init.d/functions
fi
#-----------------------

# check paths and permissions
if [ ! -f '$INFOSERVICE/infraservice.sh' ] ; then
	echo ''
	echo -n '**infaservice.sh file not found at $INFOSERVICE/infraservice.sh'
	echo_failure
	echo ''
fi


check_permissions() {
	abort=0

	#check lock file
	if [ ! -f $LOCK_FILE ] ; then
		if [ $(touch $LOCK_FILE 2>&1 | grep "Permission denied" | wc -l) -ne 0 ]; then
			echo ''
			echo '** Lock file '$LOCK_FILE' is not writable by '$(whoami)' **'
			echo_failure
			echo ''
			abort=1
		fi
	else
		if [ ! -w $LOCK_FILE ]; then
			echo ''
			echo '** Lock file '$LOCK_FILE' is not writable by '$(whoami)' **'
			echo ''
			abort=1
		fi
	fi

	#check start log 

	if [ ! -f $START_LOG ]; then
		if [ $(touch $START_LOG 2>&1 | grep "Permission denied" | wc -l) -ne 0 ]; then
			echo ''
			echo '** Log file '$START_LOG' is not writable by '$(whoami)' **'
			echo_failure
			echo ''
			abort=1
		fi
	else
		if [ ! -w $START_LOG ]; then
			echo ''
			echo '** Log file '$START_LOG' is not writable by '$(whoami)' **'
			echo_failure
			echo ''
			abort=1
		fi
	fi


	#check stop log

	if [ ! -f $STOP_LOG ]; then
		if [ $(touch $STOP_LOG 2>&1 | grep "Permission denied" | wc -l) -ne 0 ]; then
			echo ''
			echo '** Log file '$STOP_LOG' is not writable by '$(whoami)' **'
			echo_failure
			echo ''
			abort=1
		fi
	else
		if [! -w $STOP_LOG ]; then
			echo ''
			echo '** Log file '$STOP_LOG' is not writable by '$(whoami)' **'
			echo_failure
			echo ''
			abort=1
		fi
	fi

	if [ $abort -eq 1 ]; then
		echo -e '\n\n------------------------\nTo start/stop this script must be run as root (directly, or with sudo)\n\n'
		exit 255
	fi
}

#
#--------------------
#

check_process_ports () {
	# Pass the 'fingerprint' of the process to check, which should be a regex to uniquely
	# identify the process in a pgrep -f call
	#
	# Returns:
	# 0 - Process not running
	# 1 - Process running but not listening on any port
	# <ports> - the port(s) on which the process is listening
	PID=$(pgrep -f $1)
	if [ $? -eq 0 ] ; then
		PORT=$(pgrep -f $1|xargs -I'{}' $LSOF_PATH -nPp {}|grep LISTEN|awk -F ":" '{print $2}'|cut -d " " -f 1|sort -u|paste -s)
		if [ -n "$PORT" ] ; then
			echo $PORT
		else
			echo 1
		fi
	else
		echo 0
	fi
}


echo_process_status () {
	rc=$(check_process_ports $1)
	case "$rc" in
		0)
			echo_not_running
			;;
		1)	
			echo_in_progress
			;;
		*)
			echo -n "listening on port" $rc
			echo_success
	esac
	echo ' '
}

status () {
	echo ''
	echo -n ' Checking Informatica Server: '
	echo_process_status $INFO_FINGERPRINT
}


case $i in
	status)
		status
	;;
esac





